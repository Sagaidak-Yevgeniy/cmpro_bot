from http.server import BaseHTTPRequestHandler
import json
import os
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = os.environ.get('BOT_TOKEN')
API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

# –ê–¥–º–∏–Ω –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ADMIN_LOGIN = "Saga"
ADMIN_PASSWORD = "Saga190989$"
ADMIN_CHAT_ID = None  # –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
user_sessions = {}  # –•—Ä–∞–Ω–∏—Ç —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
enrollments = []    # –•—Ä–∞–Ω–∏—Ç –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å—ã
students = {}       # –•—Ä–∞–Ω–∏—Ç –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
groups = {}         # –•—Ä–∞–Ω–∏—Ç –≥—Ä—É–ø–ø—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
schedules = {}      # –•—Ä–∞–Ω–∏—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
payments = {}       # –•—Ä–∞–Ω–∏—Ç –ø–ª–∞—Ç–µ–∂–∏

# –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
RESPONSES = {
    "/start": """üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —à–∫–æ–ª—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è CodeMastersPRO!</b>

üéØ <b>–ù–∞—à–∞ –º–∏—Å—Å–∏—è:</b>
–û–±—É—á–∞—Ç—å IT‚Äë—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å –Ω—É–ª—è, —Ä–∞–∑–≤–∏–≤–∞—Ç—å –Ω–∞–≤—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–∏–≤–∞—Ç—å –ª—é–±–æ–≤—å –∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º.

üìç <b>–ì–¥–µ –Ω–∞—Å –Ω–∞–π—Ç–∏:</b>
üè¢ –ü–∞–≤–ª–æ–¥–∞—Ä, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
–ë–µ–∫–º–∞—Ö–∞–Ω–æ–≤–∞ 115/2 (—É–≥–æ–ª —É–ª. –ï—Å—Ç–∞—è –∏ –ø—Ä–æ—Å–ø–µ–∫—Ç–∞ –ù–∞–∑–∞—Ä–±–∞–µ–≤–∞)

üíª <b>–§–æ—Ä–º–∞—Ç –æ–±—É—á–µ–Ω–∏—è:</b>
‚úÖ –û—Ñ–ª–∞–π–Ω-–∑–∞–Ω—è—Ç–∏—è –≤ —É—é—Ç–Ω—ã—Ö –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–Ω—ã—Ö –∞—É–¥–∏—Ç–æ—Ä–∏—è—Ö
‚úÖ –ü—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤
‚úÖ –ü–æ—à–∞–≥–æ–≤–æ–µ –æ—Å–≤–æ–µ–Ω–∏–µ –æ—Å–Ω–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —É–≥–ª—É–±–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è

üåê <b>–ù–∞—à–∏ —Ä–µ—Å—É—Ä—Å—ã:</b>
üåü –°–∞–π—Ç: codemasterspro.dev
üì∏ Instagram: @code_masterspro

üî• <b>–ü–æ—á–µ–º—É CodeMastersPRO:</b>
‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –∏ –∂–∏–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞–º–∏
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö –∏ —Ö–∞–∫–∞—Ç–æ–Ω–∞—Ö
‚Ä¢ –ü—Ä–∏–≤–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å –∏ –ª—é–±–æ–≤—å –∫ IT —Å –ø–µ—Ä–≤—ã—Ö —à–∞–≥–æ–≤ –æ–±—É—á–µ–Ω–∏—è

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:""",
    
    "/help": """üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/directions - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è  
/enroll - –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å
/contacts - –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –∞–¥—Ä–µ—Å
/mission - –ù–∞—à–∞ –º–∏—Å—Å–∏—è
/links - –°—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã
/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

üéØ <b>–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å:</b>
1. –ù–∞–∂–º–∏—Ç–µ "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
3. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
4. –ñ–¥–∏—Ç–µ –∑–≤–æ–Ω–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞""",
    
    "/contacts": """üìç <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã CodeMastersPRO:</b>
üè¢ <b>–ê–¥—Ä–µ—Å:</b>
–ü–∞–≤–ª–æ–¥–∞—Ä, –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
–ë–µ–∫–º–∞—Ö–∞–Ω–æ–≤–∞ 115/2
(—É–≥–æ–ª —É–ª. –ï—Å—Ç–∞—è –∏ –ø—Ä–æ—Å–ø–µ–∫—Ç–∞ –ù–∞–∑–∞—Ä–±–∞–µ–≤–∞)
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> +7 (777) 332-36-76
üìß <b>Email:</b> info@codemasterspro.dev
üïí <b>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b>
–ü–Ω-–ü—Ç: 9:00 - 21:00
–°–±: 10:00 - 18:00
–í—Å: –í—ã—Ö–æ–¥–Ω–æ–π
üåê <b>–û–Ω–ª–∞–π–Ω:</b>
üîó <b>–°–∞–π—Ç:</b> https://www.codemasterspro.dev/
üì∏ <b>Instagram:</b> https://www.instagram.com/code_masterspro""",
    
    "/mission": """üéØ <b>–ù–∞—à–∞ –º–∏—Å—Å–∏—è CodeMastersPRO</b>

–ú—ã –æ–±—É—á–∞–µ–º IT‚Äë—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å –Ω—É–ª—è, —Ä–∞–∑–≤–∏–≤–∞–µ–º –Ω–∞–≤—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–∏–≤–∏–≤–∞–µ–º –ª—é–±–æ–≤—å –∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º.

üéì <b>–ù–∞—à–∏ —Ü–µ–ª–∏:</b>
‚Ä¢ –î–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Å—Ñ–µ—Ä–µ IT
‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
‚Ä¢ –†–∞–∑–≤–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –°–æ–∑–¥–∞—Ç—å –∫–æ–º—å—é–Ω–∏—Ç–∏ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤

üí° <b>–ù–∞—à –ø–æ–¥—Ö–æ–¥:</b>
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É
‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∏
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –æ–±—É—á–µ–Ω–∏—è

üöÄ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b>
–í—ã–ø—É—Å–∫–Ω–∏–∫–∏ CodeMastersPRO —É—Å–ø–µ—à–Ω–æ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –≤ –≤–µ–¥—É—â–∏–µ IT-–∫–æ–º–ø–∞–Ω–∏–∏ –∏ —Å–æ–∑–¥–∞—é—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã.""",
    
    "/links": """üåê <b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ CodeMastersPRO</b>

üîó <b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:</b>
‚Ä¢ <b>–°–∞–π—Ç:</b> https://www.codemasterspro.dev/
‚Ä¢ <b>Instagram:</b> https://www.instagram.com/code_masterspro

üìö <b>–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:</b>
‚Ä¢ <b>GitHub:</b> https://github.com/codemasterspro
‚Ä¢ <b>YouTube:</b> https://youtube.com/@codemasterspro

üíº <b>–ö–∞—Ä—å–µ—Ä–∞:</b>
‚Ä¢ <b>–í–∞–∫–∞–Ω—Å–∏–∏:</b> https://www.codemasterspro.dev/careers
‚Ä¢ <b>–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤:</b> https://www.codemasterspro.dev/portfolio

üìû <b>–°–≤—è–∑—å —Å –Ω–∞–º–∏:</b>
‚Ä¢ <b>Telegram:</b> @CodeMastersPRO_bot
‚Ä¢ <b>Email:</b> info@codemasterspro.dev
‚Ä¢ <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> +7 (777) 332-36-76"""
}

def send_message(chat_id, text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API."""
    import requests
    
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    
    if reply_markup:
        data["reply_markup"] = json.dumps(reply_markup)
    
    try:
        response = requests.post(url, json=data)
        return response.json()
    except Exception as e:
        print(f"Error sending message: {e}")
        return None

def get_main_menu_keyboard(user_id=None):
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    keyboard = {
        "inline_keyboard": [
            [
                {"text": "üéØ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "callback_data": "directions"},
                {"text": "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "callback_data": "enroll"}
            ],
            [
                {"text": "üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã", "callback_data": "contacts"},
                {"text": "üéØ –ú–∏—Å—Å–∏—è", "callback_data": "mission"}
            ],
            [
                {"text": "üåê –°—Å—ã–ª–∫–∏", "callback_data": "links"},
                {"text": "üìö –ü–æ–º–æ—â—å", "callback_data": "help"}
            ]
        ]
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    if user_id and user_id in students and students[user_id].get("status") == "approved":
        keyboard["inline_keyboard"].insert(0, [
            {"text": "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", "callback_data": "student_cabinet"}
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å" –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤
    if user_id and is_admin(user_id):
        keyboard["inline_keyboard"].insert(0, [
            {"text": "üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", "callback_data": "admin_panel"}
        ])
    
    return keyboard

def get_directions_keyboard():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π."""
    return {
        "inline_keyboard": [
            [
                {"text": "üêç Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "callback_data": "direction_python"},
                {"text": "üåê JavaScript —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "callback_data": "direction_js"}
            ],
            [
                {"text": "üîß Go —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "callback_data": "direction_go"},
                {"text": "üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "callback_data": "direction_data"}
            ],
            [
                {"text": "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "main_menu"}
            ]
        ]
    }

def get_enroll_keyboard():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å."""
    return {
        "inline_keyboard": [
            [
                {"text": "üêç Python", "callback_data": "enroll_python"},
                {"text": "üåê JavaScript", "callback_data": "enroll_js"}
            ],
            [
                {"text": "üîß Go", "callback_data": "enroll_go"},
                {"text": "üìä Data Science", "callback_data": "enroll_data"}
            ],
            [
                {"text": "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "main_menu"}
            ]
        ]
    }

def get_contact_keyboard():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞."""
    return {
        "keyboard": [
            [
                {
                    "text": "üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º",
                    "request_contact": True
                }
            ]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }

def get_student_menu_keyboard():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –º–µ–Ω—é —Å—Ç—É–¥–µ–Ω—Ç–∞."""
    return {
        "inline_keyboard": [
            [
                {"text": "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "callback_data": "student_schedule"},
                {"text": "üí∞ –ü–ª–∞—Ç–µ–∂–∏", "callback_data": "student_payments"}
            ],
            [
                {"text": "üë• –ú–æ—è –≥—Ä—É–ø–ø–∞", "callback_data": "student_group"},
                {"text": "üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", "callback_data": "student_materials"}
            ],
            [
                {"text": "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", "callback_data": "student_support"},
                {"text": "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "main_menu"}
            ]
        ]
    }

def get_school_management_keyboard():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∫–æ–ª–æ–π."""
    return {
        "inline_keyboard": [
            [
                {"text": "üìã –ó–∞–ø–∏—Å–∏", "callback_data": "admin_enrollments"},
                {"text": "üë• –ì—Ä—É–ø–ø—ã", "callback_data": "admin_groups"}
            ],
            [
                {"text": "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "callback_data": "admin_schedule"},
                {"text": "üí∞ –ü–ª–∞—Ç–µ–∂–∏", "callback_data": "admin_payments"}
            ],
            [
                {"text": "üì¢ –†–∞—Å—Å—ã–ª–∫–∏", "callback_data": "admin_broadcast"},
                {"text": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "callback_data": "admin_stats"}
            ],
            [
                {"text": "‚úèÔ∏è –¢–µ–∫—Å—Ç—ã", "callback_data": "admin_edit"},
                {"text": "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "callback_data": "main_menu"}
            ]
        ]
    }

def get_pending_enrollments_keyboard(enrollment_id=None):
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π."""
    if enrollment_id is not None:
        return {
            "inline_keyboard": [
                [
                    {"text": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "callback_data": f"approve_enrollment_{enrollment_id}"},
                    {"text": "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", "callback_data": f"reject_enrollment_{enrollment_id}"}
                ],
                [
                    {"text": "üë• –ù–∞–∑–Ω–∞—á–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", "callback_data": f"assign_to_group_{enrollment_id}"},
                    {"text": "üìû –°–≤—è–∑–∞—Ç—å—Å—è", "callback_data": f"contact_student_{enrollment_id}"}
                ],
                [
                    {"text": "üîô –ö –∑–∞–ø–∏—Å—è–º", "callback_data": "admin_enrollments"}
                ]
            ]
        }
    else:
        return {
            "inline_keyboard": [
                [
                    {"text": "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "callback_data": "approve_enrollment"},
                    {"text": "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", "callback_data": "reject_enrollment"}
                ],
                [
                    {"text": "üë• –ù–∞–∑–Ω–∞—á–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", "callback_data": "assign_to_group"},
                    {"text": "üìû –°–≤—è–∑–∞—Ç—å—Å—è", "callback_data": "contact_student"}
                ],
                [
                    {"text": "üîô –ö –∑–∞–ø–∏—Å—è–º", "callback_data": "admin_enrollments"}
                ]
            ]
        }

def is_admin(user_id):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º."""
    return user_sessions.get(user_id, {}).get("is_admin", False)

def notify_admin(enrollment_data):
    """–£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏."""
    global ADMIN_CHAT_ID
    
    if ADMIN_CHAT_ID:
        course_names = {
            "python": "üêç Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
            "js": "üåê JavaScript —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", 
            "go": "üîß Go —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
            "data": "üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö"
        }
        course_name = course_names.get(enrollment_data.get("course", ""), "–∫—É—Ä—Å")
        
        message = f"""üîî <b>–ù–û–í–ê–Ø –ó–ê–ü–ò–°–¨ –ù–ê –ö–£–†–°!</b>

üë§ <b>–°—Ç—É–¥–µ–Ω—Ç:</b> {enrollment_data.get('name', '')}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {enrollment_data.get('phone', '')}
üéØ <b>–ö—É—Ä—Å:</b> {course_name}
üïí <b>–í—Ä–µ–º—è –∑–∞–ø–∏—Å–∏:</b> {enrollment_data.get('timestamp', '')}
üë§ <b>Telegram:</b> @{enrollment_data.get('username', 'Unknown')}

üìã <b>–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π:</b> {len(enrollments)}

‚ö†Ô∏è <b>–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏!</b>"""
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∑–∞–ø–∏—Å–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        enrollment_id = len(enrollments) - 1
        user_sessions[ADMIN_CHAT_ID] = user_sessions.get(ADMIN_CHAT_ID, {})
        user_sessions[ADMIN_CHAT_ID]["pending_enrollment"] = enrollment_id
        
        send_message(ADMIN_CHAT_ID, message, get_pending_enrollments_keyboard(enrollment_id))

def process_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    text = message.get("text", "")
    chat_id = message.get("chat", {}).get("id")
    user = message.get("from", {})
    user_id = user.get("id")
    username = user.get("username", "Unknown")
    contact = message.get("contact")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    if contact:
        phone = contact.get("phone_number", "")
        first_name = contact.get("first_name", "")
        last_name = contact.get("last_name", "")
        full_name = f"{first_name} {last_name}".strip()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å –∏–∑ —Å–µ—Å—Å–∏–∏
        if user_id in user_sessions and "selected_course" in user_sessions[user_id]:
            selected_course = user_sessions[user_id]["selected_course"]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å
            enrollment_data = {
                "name": full_name,
                "phone": phone,
                "course": selected_course,
                "username": username,
                "user_id": user_id,
                "timestamp": time.strftime("%d.%m.%Y %H:%M")
            }
            enrollments.append(enrollment_data)
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å —Å—Ç—É–¥–µ–Ω—Ç–∞ (–æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)
            students[user_id] = {
                "name": full_name,
                "phone": phone,
                "course": selected_course,
                "username": username,
                "status": "pending",  # –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                "group": None,
                "enrollment_date": time.strftime("%d.%m.%Y %H:%M")
            }
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
            notify_admin(enrollment_data)
            
            response_text = f"""‚úÖ <b>–ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</b>

üë§ <b>–ò–º—è:</b> {full_name}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}
üéØ <b>–ö—É—Ä—Å:</b> {selected_course}
üìÖ <b>–î–∞—Ç–∞:</b> {time.strftime("%d.%m.%Y %H:%M")}

‚è≥ <b>–°—Ç–∞—Ç—É—Å:</b> –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è

üìû <b>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!</b>"""
            
            send_message(chat_id, response_text, get_main_menu_keyboard(user_id))
        else:
            send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞: –∫—É—Ä—Å –Ω–µ –≤—ã–±—Ä–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ.", get_main_menu_keyboard(user_id))
        
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if text == "/start":
        response_text = RESPONSES["/start"]
        keyboard = get_main_menu_keyboard(user_id)
        
    elif text == "/help":
        response_text = RESPONSES["/help"]
        keyboard = get_main_menu_keyboard(user_id)
        
    elif text == "/admin":
        response_text = """üîê <b>–í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>

–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.

‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –ü–∞—Ä–æ–ª—å –±—É–¥–µ—Ç —Å–∫—Ä—ã—Ç –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."""
        keyboard = None
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    elif text.startswith(ADMIN_LOGIN) and ADMIN_PASSWORD in text:
        global ADMIN_CHAT_ID
        ADMIN_CHAT_ID = chat_id
        user_sessions[user_id] = {"is_admin": True}
        
        response_text = f"""‚úÖ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {ADMIN_LOGIN}!</b>

üîß <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∫–æ–ª–æ–π CodeMastersPRO</b>

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ó–∞–ø–∏—Å–µ–π –Ω–∞ –∫—É—Ä—Å—ã: {len(enrollments)}
‚Ä¢ –°—Ç—É–¥–µ–Ω—Ç–æ–≤: {len(students)}
‚Ä¢ –ì—Ä—É–ø–ø: {len(groups)}

üéØ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å—è–º–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø
‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –∑–∞–Ω—è—Ç–∏–π
‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å –ø–ª–∞—Ç–µ–∂–µ–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
‚Ä¢ –†–∞—Å—Å—ã–ª–∫–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        keyboard = get_school_management_keyboard()
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤
    elif is_admin(user_id) and user_sessions.get(user_id, {}).get("editing_text"):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        section = user_sessions[user_id]["editing_text"]
        RESPONSES[f"/{section}"] = text
        user_sessions[user_id].pop("editing_text", None)
        
        response_text = f"‚úÖ <b>–¢–µ–∫—Å—Ç —Ä–∞–∑–¥–µ–ª–∞ '{section}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>\n\n–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ."
        keyboard = get_school_management_keyboard()
        
    else:
        response_text = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."
        keyboard = get_main_menu_keyboard(user_id)
    
    send_message(chat_id, response_text, keyboard)

def process_callback_query(callback_query):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å callback query."""
    data = callback_query.get("data", "")
    user_id = callback_query.get("from", {}).get("id")
    chat_id = callback_query.get("message", {}).get("chat", {}).get("id")
    message_id = callback_query.get("message", {}).get("message_id")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤
    if data == "main_menu":
        response_text = RESPONSES["/start"]
        keyboard = get_main_menu_keyboard(user_id)
        
    elif data == "directions":
        response_text = """üéØ <b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è CodeMastersPRO</b>

üêç <b>Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</b>
–ò–∑—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –û—Ç –æ—Å–Ω–æ–≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏.

üåê <b>JavaScript —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</b>
–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º JavaScript, React, Node.js. –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.

üîß <b>Go —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</b>
–ò–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ Go –æ—Ç Google. –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –ø—Ä–æ—Å—Ç–æ—Ç–∞ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.

üìä <b>–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</b>
–†–∞–±–æ—Ç–∞ —Å –±–æ–ª—å—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏, –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö. Python, pandas, numpy, matplotlib.

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:"""
        keyboard = get_directions_keyboard()
        
    elif data == "enroll":
        response_text = """üìù <b>–ó–∞–ø–∏—Å—å –Ω–∞ –∫—É—Ä—Å</b>

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è:

üêç <b>Python</b> - –æ—Ç –æ—Å–Ω–æ–≤ –¥–æ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
üåê <b>JavaScript</b> - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞  
üîß <b>Go</b> - –≤—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
üìä <b>Data Science</b> - –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ ML

–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –¥–ª—è —Å–≤—è–∑–∏."""
        keyboard = get_enroll_keyboard()
        
    elif data.startswith("enroll_"):
        course = data.split("_")[1]
        course_names = {
            "python": "üêç Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
            "js": "üåê JavaScript —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
            "go": "üîß Go —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", 
            "data": "üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö"
        }
        course_name = course_names.get(course, course)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å
        user_sessions[user_id] = user_sessions.get(user_id, {})
        user_sessions[user_id]["selected_course"] = course
        
        response_text = f"""üìù <b>–ó–∞–ø–∏—Å—å –Ω–∞ –∫—É—Ä—Å: {course_name}</b>

–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.

üì± <b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</b>"""
        keyboard = get_contact_keyboard()
        
    elif data == "contacts":
        response_text = RESPONSES["/contacts"]
        keyboard = get_main_menu_keyboard(user_id)
        
    elif data == "mission":
        response_text = RESPONSES["/mission"]
        keyboard = get_main_menu_keyboard(user_id)
        
    elif data == "links":
        response_text = RESPONSES["/links"]
        keyboard = get_main_menu_keyboard(user_id)
        
    elif data == "help":
        response_text = RESPONSES["/help"]
        keyboard = get_main_menu_keyboard(user_id)
        
    elif data == "admin_panel":
        if is_admin(user_id):
            response_text = f"""üîß <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —à–∫–æ–ª–æ–π</b>

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ó–∞–ø–∏—Å–µ–π –Ω–∞ –∫—É—Ä—Å—ã: {len(enrollments)}
‚Ä¢ –°—Ç—É–¥–µ–Ω—Ç–æ–≤: {len(students)}
‚Ä¢ –ì—Ä—É–ø–ø: {len(groups)}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""
            keyboard = get_school_management_keyboard()
        else:
            response_text = "‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</b>\n\n–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
            keyboard = get_main_menu_keyboard(user_id)
            
    elif data == "admin_enrollments":
        if is_admin(user_id):
            if enrollments:
                response_text = f"üìã <b>–ó–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å—ã</b>\n\n"
                for i, enrollment in enumerate(enrollments):
                    status = students.get(enrollment["user_id"], {}).get("status", "pending")
                    status_emoji = "‚úÖ" if status == "approved" else "‚è≥" if status == "pending" else "‚ùå"
                    response_text += f"{i+1}. {status_emoji} {enrollment['name']} - {enrollment['course']}\n"
            else:
                response_text = "üìã <b>–ó–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å—ã</b>\n\n–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π."
            keyboard = get_school_management_keyboard()
        else:
            response_text = "‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</b>"
            keyboard = get_main_menu_keyboard(user_id)
            
    elif data == "student_cabinet":
        if user_id in students and students[user_id].get("status") == "approved":
            student = students[user_id]
            response_text = f"""üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>

üë§ <b>–ò–º—è:</b> {student.get('name', '')}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {student.get('phone', '')}
üéì <b>–ö—É—Ä—Å:</b> {student.get('course', '')}
‚úÖ <b>–°—Ç–∞—Ç—É—Å:</b> –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
üìÖ <b>–î–∞—Ç–∞ –∑–∞–ø–∏—Å–∏:</b> {student.get('enrollment_date', '')}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""
            keyboard = get_student_menu_keyboard()
        else:
            response_text = "‚ùå <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</b>\n\n–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É."
            keyboard = get_main_menu_keyboard(user_id)
            
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π
    elif data.startswith("approve_enrollment_"):
        enrollment_id = int(data.split("_")[2])
        
        if is_admin(user_id) and enrollment_id < len(enrollments):
            enrollment = enrollments[enrollment_id]
            student_user_id = enrollment.get("user_id")
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
            if student_user_id in students:
                students[student_user_id]["status"] = "approved"
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
                course_names = {
                    "python": "üêç Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
                    "js": "üåê JavaScript —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", 
                    "go": "üîß Go —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
                    "data": "üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö"
                }
                course_name = course_names.get(enrollment.get("course", ""), "–∫—É—Ä—Å")
                
                student_message = f"""üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à–∞ –∑–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!</b>

üë§ <b>–ò–º—è:</b> {enrollment.get('name', '')}
üéØ <b>–ö—É—Ä—Å:</b> {course_name}
‚úÖ <b>–°—Ç–∞—Ç—É—Å:</b> –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω

üìû <b>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π</b>

üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CodeMastersPRO!</b>"""
                
                send_message(student_user_id, student_message, get_student_menu_keyboard())
                
                response_text = f"‚úÖ <b>–ó–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!</b>\n\n–°—Ç—É–¥–µ–Ω—Ç {enrollment.get('name', '')} –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∏ –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ª–Ω–æ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É."
            else:
                response_text = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω."
        else:
            response_text = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞."
        
        keyboard = get_school_management_keyboard()
        
    elif data.startswith("reject_enrollment_"):
        enrollment_id = int(data.split("_")[2])
        
        if is_admin(user_id) and enrollment_id < len(enrollments):
            enrollment = enrollments[enrollment_id]
            student_user_id = enrollment.get("user_id")
            
            # –û—Ç–∫–ª–æ–Ω—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
            if student_user_id in students:
                students[student_user_id]["status"] = "rejected"
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
                student_message = f"""‚ùå <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞</b>

üë§ <b>–ò–º—è:</b> {enrollment.get('name', '')}
üéØ <b>–ö—É—Ä—Å:</b> {enrollment.get('course', '')}

üìû <b>–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:</b>
üìû +7 (777) 332-36-76
üìß info@codemasterspro.dev

üîÑ <b>–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É</b>"""
                
                send_message(student_user_id, student_message, get_main_menu_keyboard(student_user_id))
                
                response_text = f"‚ùå <b>–ó–∞–ø–∏—Å—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!</b>\n\n–°—Ç—É–¥–µ–Ω—Ç {enrollment.get('name', '')} –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏."
            else:
                response_text = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω."
        else:
            response_text = "‚ùå <b>–û—à–∏–±–∫–∞:</b> –ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞."
        
        keyboard = get_school_management_keyboard()
        
    else:
        response_text = "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞."
        keyboard = get_main_menu_keyboard(user_id)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    send_message(chat_id, response_text, keyboard)

def process_webhook(update):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å webhook –æ—Ç Telegram."""
    if "message" in update:
        process_message(update["message"])
    elif "callback_query" in update:
        process_callback_query(update["callback_query"])

class handler(BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        post_data = self.rfile.read(content_length)
        
        try:
            update = json.loads(post_data.decode('utf-8'))
            process_webhook(update)
            
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            self.wfile.write(b'{"ok": true}')
            
        except Exception as e:
            print(f"Error processing webhook: {e}")
            self.send_response(500)
            self.end_headers()
    
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()
        self.wfile.write(b'CodeMastersPRO Bot is running!')