from http.server import BaseHTTPRequestHandler
import json
import os

BOT_TOKEN = os.environ.get('BOT_TOKEN')

def send_message(chat_id, text, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram Bot API."""
    import requests
    
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    
    data = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    
    if reply_markup:
        data["reply_markup"] = json.dumps(reply_markup)
    
    try:
        response = requests.post(url, json=data)
        return response.json()
    except Exception as e:
        print(f"Error sending message: {e}")
        return None

def get_main_menu_keyboard():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    return {
        "inline_keyboard": [
            [
                {"text": "üéØ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è", "callback_data": "directions"},
                {"text": "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", "callback_data": "enroll"}
            ],
            [
                {"text": "üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã", "callback_data": "contacts"},
                {"text": "üéØ –ú–∏—Å—Å–∏—è", "callback_data": "mission"}
            ],
            [
                {"text": "üåê –°—Å—ã–ª–∫–∏", "callback_data": "links"},
                {"text": "üìö –ü–æ–º–æ—â—å", "callback_data": "help"}
            ]
        ]
    }

def process_webhook(update):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å webhook –æ—Ç Telegram."""
    if "message" in update:
        message = update["message"]
        chat_id = message["chat"]["id"]
        text = message.get("text", "")
        
        if text == "/start":
            response_text = """üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —à–∫–æ–ª—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è CodeMastersPRO!</b>

üéØ <b>–ù–∞—à–∞ –º–∏—Å—Å–∏—è:</b>
–ú—ã –æ–±—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é —Å –Ω—É–ª—è –∏ –≥–æ—Ç–æ–≤–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –¥–ª—è IT-–∏–Ω–¥—É—Å—Ç—Ä–∏–∏.

üìö <b>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è:</b>
‚Ä¢ üêç Python —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ üåê JavaScript —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞  
‚Ä¢ üîß Go —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ üìä –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö

üè¢ <b>–û –Ω–∞—Å:</b>
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ –æ–±—É—á–µ–Ω–∏—è
‚Ä¢ –û–ø—ã—Ç–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
‚Ä¢ –ü–æ–º–æ—â—å –≤ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö –∏ —Ö–∞–∫–∞—Ç–æ–Ω–∞—Ö
‚Ä¢ –ü—Ä–∏–≤–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–µ—Å –∏ –ª—é–±–æ–≤—å –∫ IT —Å –ø–µ—Ä–≤—ã—Ö —à–∞–≥–æ–≤ –æ–±—É—á–µ–Ω–∏—è

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"""
            
            send_message(chat_id, response_text, get_main_menu_keyboard())
        
        elif text == "/help":
            response_text = """üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>

/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/directions - –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è  
/enroll - –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å
/contacts - –ö–æ–Ω—Ç–∞–∫—Ç—ã –∏ –∞–¥—Ä–µ—Å
/mission - –ù–∞—à–∞ –º–∏—Å—Å–∏—è
/links - –°—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã
/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

üéØ <b>–ö–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å:</b>
1. –ù–∞–∂–º–∏—Ç–µ "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"
2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
3. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º
4. –ñ–¥–∏—Ç–µ –∑–≤–æ–Ω–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
            
            send_message(chat_id, response_text, get_main_menu_keyboard())
        
        else:
            send_message(chat_id, "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.", get_main_menu_keyboard())

class handler(BaseHTTPRequestHandler):
    def do_POST(self):
        content_length = int(self.headers['Content-Length'])
        post_data = self.rfile.read(content_length)
        
        try:
            update = json.loads(post_data.decode('utf-8'))
            process_webhook(update)
            
            self.send_response(200)
            self.send_header('Content-type', 'application/json')
            self.end_headers()
            self.wfile.write(b'{"ok": true}')
            
        except Exception as e:
            print(f"Error processing webhook: {e}")
            self.send_response(500)
            self.end_headers()
    
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()
        self.wfile.write(b'CodeMastersPRO Bot is running!')